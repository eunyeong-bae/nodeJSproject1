<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="/main.css" rel="stylesheet"/>
</head>
<body class="grey-bg">
    <!-- %- : include 문법 사용할 때 or 사용하면 html 이 렌더링되어 나옴 -->
    <%- include('nav.ejs') %>

    <div class="detail-bg">
        <div class="chat-screen">
          <div class="chat-box"><span>안녕하세요</span></div>
          <div class="chat-box"><span>안녕하세요</span></div>
          <div class="chat-box mine"><span>안녕하세요</span></div>
        </div>

        <div class="chat-form">
            <input class="chat-input">
            <button class="chat-button">전송</button>
        </div> 
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/socket.io@4.7.2/client-dist/socket.io.min.js"></script>
    <script>
        const socket = io(); //유저의 웹 소켓 연결 
        socket.emit('ask-join', '<%= result._id %>') //room 에 넣어달라고 서버에 요청하기

        document.querySelector('.chat-button').addEventListener('click', function(){
            const content = document.querySelector('.chat-input').value;
                        
            socket.emit('message-send', { msg : content, room: '<%= result._id %>'})
        })

        //서버에서 보낸 데이터 받기
        socket.on('message-broadcast', (data) => {
            document.querySelector('.chat-screen').insertAdjacentHTML('beforeend',`<div class="chat-box"><span>${data}</span></div>`)
        })

        //실시간 채팅 앱
        //1. 채팅방 상세페이지 접속 시 room 에 넣어주기
        //2. 유저가 메시지 전송하면 같은 룸에 전달하기
    </script>

</body>
</html>